/**
 * Category Memory
 *
 * COLUMNS
 * (pk) id          : int autoincrement (autogenerated)
 *      title       : string
 *      description     : text
 *      coordinates : geometry.point
 *      reports     : virtual           (virtual column that returns number of reports)
 *      createdAt   : datetime          (autogenerated)
 *      iupdatedAt  : datetime          (autogenerated)
 *
 * ASSOCIATIONS
 * (fk) userID      : int               (autogenerated)
 * (fk) categoryID  : int               (autogenerated)
 */
const { DataTypes } = require('sequelize');
const sequelize = require('../config/db').sequelize;
const Report = require('./report');
const User = require('./user')

const Memory = sequelize.define(
    'Memory',
    {
        title: {
            type: DataTypes.STRING,
            allowNull: false,
            validate: {
                min: {
                    args: 4,
                    msg: 'Description has to be minimum 4 characters',
                },
                max: {
                    args: 255,
                    msg: 'Description has to be maximum 255 characters',
                },
            },
        },
        description: {
            type: DataTypes.TEXT,
            allowNull: false,
            validate: {
                min: {
                    args: 10,
                    msg: 'Description has to be minimum 10 characters',
                },
            },
        },
        photo: {
            type: DataTypes.JSON
        },
        position: {
            type: DataTypes.GEOMETRY('POINT'),
            allowNull: false,
        },
    },
    {
        timestamps: true,
    }
);

Memory.associate = function(models) {
    //Memory posted by one user
    Memory.belongsTo(models.User, {
        foreignKey: 'userId',
    });

    Memory.hasMany(models.Report, {
        foreignKey: 'memoryId'
    });

    //Memory have one category
    Memory.belongsTo(models.Category, {
        foreignKey: 'categoryId',
    });
};

module.exports = Memory;
